{"version":3,"sources":["helpers/validators.js","components/Login/Login.jsx"],"names":["__webpack_require__","d","__webpack_exports__","required","renderField","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","value","undefined","_ref","input","type","placeholder","className","_ref$meta","meta","touched","error","a","createElement","Object","assign","r","redux_form__WEBPACK_IMPORTED_MODULE_1__","redux_form__WEBPACK_IMPORTED_MODULE_2__","react_redux__WEBPACK_IMPORTED_MODULE_3__","_redux_auth_reducer__WEBPACK_IMPORTED_MODULE_4__","_helpers_validators__WEBPACK_IMPORTED_MODULE_5__","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","component","name","validate","style","border","connect","state","isLogged","auth","loginUser","logOut","props","to","formData","login","password","rememberMe"],"mappings":"0FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAEaF,EAAW,SAAAK,GAAK,OAAKA,OAAQC,EAAY,YAEzCL,EACX,SAAAM,GAAA,IACGC,EADHD,EACGC,MACAC,EAFHF,EAEGE,KACAC,EAHHH,EAGGG,YACAC,EAJHJ,EAIGI,UAJHC,EAAAL,EAKGM,KAAOC,EALVF,EAKUE,QAASC,EALnBH,EAKmBG,MALnB,OAOEZ,EAAAa,EAAAC,cAAA,WACEd,EAAAa,EAAAC,cAAA,QAAAC,OAAAC,OAAA,GAAWX,EAAX,CAAkBE,YAAaA,EAAaC,UAAWA,EAAWF,KAAMA,KAEtEK,GAAYC,GAASZ,EAAAa,EAAAC,cAAA,gBAAQF,EAAR,yCCf7BlB,EAAAuB,EAAArB,GAAA,IAAAG,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAmB,EAAAxB,EAAA,KAAAyB,EAAAzB,EAAA,KAAA0B,EAAA1B,EAAA,IAAA2B,EAAA3B,EAAA,IAAA4B,EAAA5B,EAAA,KAAA6B,EAAA7B,EAAA,GAiDM8B,EAAiBC,YAAU,CAC/BC,KAAM,SADeD,CAzCL,SAAArB,GAA2B,IAAzBuB,EAAyBvB,EAAzBuB,aAAcf,EAAWR,EAAXQ,MAChC,OACEZ,EAAAa,EAAAC,cAAA,QAAMc,SAAUD,GACd3B,EAAAa,EAAAC,cAAA,WACEd,EAAAa,EAAAC,cAACI,EAAA,EAAD,CACEX,YAAa,QACbsB,UAAW/B,IACXgC,KAAM,QACNC,SAAU,CAAClC,QAGfG,EAAAa,EAAAC,cAAA,WACEd,EAAAa,EAAAC,cAACI,EAAA,EAAD,CACEX,YAAa,WACbsB,UAAW/B,IACXgC,KAAM,WACNxB,KAAM,WACNyB,SAAU,CAAClC,QAGfG,EAAAa,EAAAC,cAAA,WACEd,EAAAa,EAAAC,cAACI,EAAA,EAAD,CACEW,UAAW/B,IACXQ,KAAM,WACNwB,KAAM,aACNC,SAAU,CAAClC,OALf,eASEe,GACAZ,EAAAa,EAAAC,cAAA,OAAKkB,MAAO,CAAEC,OAAQ,kBAClBrB,GAGNZ,EAAAa,EAAAC,cAAA,WACEd,EAAAa,EAAAC,cAAA,2BAgCOoB,sBAJS,SAACC,GAAD,MAAY,CAClCC,SAAUD,EAAME,KAAKD,WAGiB,CACtCE,cACAC,YAFaL,CAtBD,SAACM,GAMb,OAAIA,EAAMJ,SACDpC,EAAAa,EAAAC,cAACS,EAAA,EAAD,CAAUkB,GAAI,aAIrBzC,EAAAa,EAAAC,cAAA,WACEd,EAAAa,EAAAC,cAAA,mBACAd,EAAAa,EAAAC,cAACU,EAAD,CAAgBI,SAZH,SAACc,GAAa,IACxBC,EAA+BD,EAA/BC,MAAOC,EAAwBF,EAAxBE,SAAUC,EAAcH,EAAdG,WACtBL,EAAMF,UAAUK,EAAOC,EAAUC","file":"static/js/8.a1e32e1d.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const required = value => (value ? undefined : 'Required');\n\nexport const renderField =\n  ({\n     input,\n     type,\n     placeholder,\n     className,\n     meta: {touched, error}\n   }) => (\n    <div>\n      <input {...input} placeholder={placeholder} className={className} type={type}/>\n      {\n        touched && (error && <span> {error} </span>)\n      }\n    </div>\n  )","import React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {connect} from \"react-redux\";\nimport {loginUser, logOut} from \"../../redux/auth-reducer\";\nimport { required } from '../../helpers/validators';\nimport { renderField } from '../../helpers/validators';\nimport {Redirect} from \"react-router-dom\";\n\nconst LoginForm = ({handleSubmit, error}) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field\n          placeholder={\"Login\"}\n          component={renderField}\n          name={\"login\"}\n          validate={[required]}\n        />\n      </div>\n      <div>\n        <Field\n          placeholder={\"Password\"}\n          component={renderField}\n          name={\"password\"}\n          type={\"password\"}\n          validate={[required]}\n        />\n      </div>\n      <div>\n        <Field\n          component={renderField}\n          type={\"checkbox\"}\n          name={\"rememberMe\"}\n          validate={[required]}\n        />\n        remember me\n      </div>\n      { error &&\n        <div style={{ border: \"1px solid red\" }}>\n          { error }\n        </div>\n      }\n      <div>\n        <button>Login</button>\n      </div>\n    </form>\n  )\n}\n\nconst LoginReduxForm = reduxForm({\n  form: 'login'\n})(LoginForm)\n\nconst Login = (props) => {\n  const onSubmit = (formData) => {\n    let {login, password, rememberMe} = formData\n    props.loginUser(login, password, rememberMe)\n  }\n\n  if (props.isLogged) {\n    return <Redirect to={\"/profile\"}/>\n  }\n\n  return (\n    <div>\n      <h1>Login</h1>\n      <LoginReduxForm onSubmit={onSubmit}/>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  isLogged: state.auth.isLogged\n})\n\nexport default connect(mapStateToProps, {\n  loginUser,\n  logOut\n})(Login);"],"sourceRoot":""}